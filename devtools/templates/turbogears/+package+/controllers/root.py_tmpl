"""Main Controller"""
from {{package}}.lib.base import BaseController
from tg import expose, flash, require, url, request, redirect
from pylons.i18n import ugettext as _
#from tg import redirect, validate
from {{package}}.model import DBSession, metadata
from {{package}}.controllers.error import ErrorController

{{if auth == "sqlalchemy"}}
from {{package}} import model
from catwalk.tg2 import Catwalk
from repoze.what import predicates
from {{package}}.controllers.secure import SecureController
{{endif}}

class RootController(BaseController):
{{if auth == "sqlalchemy"}}
    secc = SecureController()
    admin = Catwalk(model, DBSession)
{{endif}}
    error = ErrorController()

    @expose('{{package}}.templates.index')
    def index(self):
        return dict(page='index')

    @expose('{{package}}.templates.about')
    def about(self):
        return dict(page='about')

    {{if auth == "sqlalchemy"}}
    @expose('{{package}}.templates.authentication')
    def auth(self):
        return dict(page='auth')
    {{endif}}

{{if auth == "sqlalchemy"}}
    @expose('{{package}}.templates.index')
    @require(predicates.has_permission('manage', msg=_('Only for managers')))
    def manage_permission_only(self, **kw):
        return dict(page='managers stuff')

    @expose('{{package}}.templates.index')
    @require(predicates.is_user('editor', msg=_('Only for the editor')))
    def editor_user_only(self, **kw):
        return dict(page='editor stuff')

    @expose('{{package}}.templates.login')
    def login(self, came_from=url('/')):
        login_counter = request.environ['repoze.who.logins']
        if login_counter > 0:
            flash(_('Wrong credentials'), 'warning')
        return dict(page='login', login_counter=str(login_counter),
                    came_from=came_from)

    @expose()
    def post_login(self, came_from=url('/')):
        if not request.identity:
            login_counter = request.environ['repoze.who.logins'] + 1
            redirect(url('/login', came_from=came_from, __logins=login_counter))
        userid = request.identity['repoze.who.userid']
        flash(_('Welcome back, %s!') % userid)
        redirect(came_from)

    @expose()
    def post_logout(self, came_from=url('/')):
        flash(_('We hope to see you soon!'))
        redirect(came_from)
{{endif}}
